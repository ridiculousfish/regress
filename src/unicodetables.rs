// DO NOT EDIT! This file is autogenerated from gen-unicode.
use crate::unicode::FoldRange;

#[derive(Debug, Clone, Copy)]
pub(crate) enum UnicodePropertyBinary {
    Alphabetic,
    CaseIgnorable,
    Cased,
    ChangesWhenCasefolded,
    ChangesWhenCasemapped,
    ChangesWhenLowercased,
    ChangesWhenTitlecased,
    ChangesWhenUppercased,
    DefaultIgnorableCodePoint,
    GraphemeBase,
    GraphemeExtend,
    IDContinue,
    IDStart,
    Math,
    XIDContinue,
    XIDStart,
    ASCIIHexDigit,
    BidiControl,
    Dash,
    Deprecated,
    Diacritic,
    Extender,
    HexDigit,
    IDSBinaryOperator,
    IDSTrinaryOperator,
    Ideographic,
    JoinControl,
    LogicalOrderException,
    Lowercase,
    NoncharacterCodePoint,
    PatternSyntax,
    PatternWhiteSpace,
    QuotationMark,
    Radical,
    RegionalIndicator,
    SentenceTerminal,
    SoftDotted,
    TerminalPunctuation,
    UnifiedIdeograph,
    Uppercase,
    VariationSelector,
    WhiteSpace,
    Emoji,
    EmojiComponent,
    EmojiModifier,
    EmojiModifierBase,
    EmojiPresentation,
    ExtendedPictographic,
    ChangesWhenNFKCCasefolded,
    BidiMirrored,
    Ascii,
    Any,
    Assigned,
}

pub(crate) fn unicode_property_binary_from_str(s: &str) -> Option<UnicodePropertyBinary> {
    use UnicodePropertyBinary::*;
    match s {
        "Alpha" | "Alphabetic" => Some(Alphabetic),
        "CI" | "Case_Ignorable" => Some(CaseIgnorable),
        "Cased" => Some(Cased),
        "CWCF" | "Changes_When_Casefolded" => Some(ChangesWhenCasefolded),
        "CWCM" | "Changes_When_Casemapped" => Some(ChangesWhenCasemapped),
        "CWL" | "Changes_When_Lowercased" => Some(ChangesWhenLowercased),
        "CWT" | "Changes_When_Titlecased" => Some(ChangesWhenTitlecased),
        "CWU" | "Changes_When_Uppercased" => Some(ChangesWhenUppercased),
        "DI" | "Default_Ignorable_Code_Point" => Some(DefaultIgnorableCodePoint),
        "Gr_Base" | "Grapheme_Base" => Some(GraphemeBase),
        "Gr_Ext" | "Grapheme_Extend" => Some(GraphemeExtend),
        "IDC" | "ID_Continue" => Some(IDContinue),
        "IDS" | "ID_Start" => Some(IDStart),
        "Math" => Some(Math),
        "XIDC" | "XID_Continue" => Some(XIDContinue),
        "XIDS" | "XID_Start" => Some(XIDStart),
        "AHex" | "ASCII_Hex_Digit" => Some(ASCIIHexDigit),
        "Bidi_C" | "Bidi_Control" => Some(BidiControl),
        "Dash" => Some(Dash),
        "Dep" | "Deprecated" => Some(Deprecated),
        "Dia" | "Diacritic" => Some(Diacritic),
        "Ext" | "Extender" => Some(Extender),
        "Hex" | "Hex_Digit" => Some(HexDigit),
        "IDSB" | "IDS_Binary_Operator" => Some(IDSBinaryOperator),
        "IDST" | "IDS_Trinary_Operator" => Some(IDSTrinaryOperator),
        "Ideo" | "Ideographic" => Some(Ideographic),
        "Join_C" | "Join_Control" => Some(JoinControl),
        "LOE" | "Logical_Order_Exception" => Some(LogicalOrderException),
        "Lower" | "Lowercase" => Some(Lowercase),
        "NChar" | "Noncharacter_Code_Point" => Some(NoncharacterCodePoint),
        "Pat_Syn" | "Pattern_Syntax" => Some(PatternSyntax),
        "Pat_WS" | "Pattern_White_Space" => Some(PatternWhiteSpace),
        "QMark" | "Quotation_Mark" => Some(QuotationMark),
        "Radical" => Some(Radical),
        "RI" | "Regional_Indicator" => Some(RegionalIndicator),
        "STerm" | "Sentence_Terminal" => Some(SentenceTerminal),
        "SD" | "Soft_Dotted" => Some(SoftDotted),
        "Term" | "Terminal_Punctuation" => Some(TerminalPunctuation),
        "UIdeo" | "Unified_Ideograph" => Some(UnifiedIdeograph),
        "Upper" | "Uppercase" => Some(Uppercase),
        "VS" | "Variation_Selector" => Some(VariationSelector),
        "space" | "White_Space" => Some(WhiteSpace),
        "Emoji" => Some(Emoji),
        "EComp" | "Emoji_Component" => Some(EmojiComponent),
        "EMod" | "Emoji_Modifier" => Some(EmojiModifier),
        "EBase" | "Emoji_Modifier_Base" => Some(EmojiModifierBase),
        "EPres" | "Emoji_Presentation" => Some(EmojiPresentation),
        "ExtPict" | "Extended_Pictographic" => Some(ExtendedPictographic),
        "CWKCF" | "Changes_When_NFKC_Casefolded" => Some(ChangesWhenNFKCCasefolded),
        "Bidi_M" | "Bidi_Mirrored" => Some(BidiMirrored),
        "ASCII" => Some(Ascii),
        "Any" => Some(Any),
        "Assigned" => Some(Assigned),
        _ => None,
    }
}

pub(crate) const FOLDS: [FoldRange; 201] = [
    FoldRange::from(0x41, 26, 32, 1),
    FoldRange::from(0xB5, 1, 775, 1),
    FoldRange::from(0xC0, 23, 32, 1),
    FoldRange::from(0xD8, 7, 32, 1),
    FoldRange::from(0x100, 47, 1, 2),
    FoldRange::from(0x132, 5, 1, 2),
    FoldRange::from(0x139, 15, 1, 2),
    FoldRange::from(0x14A, 45, 1, 2),
    FoldRange::from(0x178, 1, -121, 1),
    FoldRange::from(0x179, 5, 1, 2),
    FoldRange::from(0x17F, 1, -268, 1),
    FoldRange::from(0x181, 1, 210, 1),
    FoldRange::from(0x182, 3, 1, 2),
    FoldRange::from(0x186, 1, 206, 1),
    FoldRange::from(0x187, 1, 1, 1),
    FoldRange::from(0x189, 2, 205, 1),
    FoldRange::from(0x18B, 1, 1, 1),
    FoldRange::from(0x18E, 1, 79, 1),
    FoldRange::from(0x18F, 1, 202, 1),
    FoldRange::from(0x190, 1, 203, 1),
    FoldRange::from(0x191, 1, 1, 1),
    FoldRange::from(0x193, 1, 205, 1),
    FoldRange::from(0x194, 1, 207, 1),
    FoldRange::from(0x196, 1, 211, 1),
    FoldRange::from(0x197, 1, 209, 1),
    FoldRange::from(0x198, 1, 1, 1),
    FoldRange::from(0x19C, 1, 211, 1),
    FoldRange::from(0x19D, 1, 213, 1),
    FoldRange::from(0x19F, 1, 214, 1),
    FoldRange::from(0x1A0, 5, 1, 2),
    FoldRange::from(0x1A6, 1, 218, 1),
    FoldRange::from(0x1A7, 1, 1, 1),
    FoldRange::from(0x1A9, 1, 218, 1),
    FoldRange::from(0x1AC, 1, 1, 1),
    FoldRange::from(0x1AE, 1, 218, 1),
    FoldRange::from(0x1AF, 1, 1, 1),
    FoldRange::from(0x1B1, 2, 217, 1),
    FoldRange::from(0x1B3, 3, 1, 2),
    FoldRange::from(0x1B7, 1, 219, 1),
    FoldRange::from(0x1B8, 5, 1, 4),
    FoldRange::from(0x1C4, 1, 2, 1),
    FoldRange::from(0x1C5, 1, 1, 1),
    FoldRange::from(0x1C7, 1, 2, 1),
    FoldRange::from(0x1C8, 1, 1, 1),
    FoldRange::from(0x1CA, 1, 2, 1),
    FoldRange::from(0x1CB, 17, 1, 2),
    FoldRange::from(0x1DE, 17, 1, 2),
    FoldRange::from(0x1F1, 1, 2, 1),
    FoldRange::from(0x1F2, 3, 1, 2),
    FoldRange::from(0x1F6, 1, -97, 1),
    FoldRange::from(0x1F7, 1, -56, 1),
    FoldRange::from(0x1F8, 39, 1, 2),
    FoldRange::from(0x220, 1, -130, 1),
    FoldRange::from(0x222, 17, 1, 2),
    FoldRange::from(0x23A, 1, 10795, 1),
    FoldRange::from(0x23B, 1, 1, 1),
    FoldRange::from(0x23D, 1, -163, 1),
    FoldRange::from(0x23E, 1, 10792, 1),
    FoldRange::from(0x241, 1, 1, 1),
    FoldRange::from(0x243, 1, -195, 1),
    FoldRange::from(0x244, 1, 69, 1),
    FoldRange::from(0x245, 1, 71, 1),
    FoldRange::from(0x246, 9, 1, 2),
    FoldRange::from(0x345, 1, 116, 1),
    FoldRange::from(0x370, 3, 1, 2),
    FoldRange::from(0x376, 1, 1, 1),
    FoldRange::from(0x37F, 1, 116, 1),
    FoldRange::from(0x386, 1, 38, 1),
    FoldRange::from(0x388, 3, 37, 1),
    FoldRange::from(0x38C, 1, 64, 1),
    FoldRange::from(0x38E, 2, 63, 1),
    FoldRange::from(0x391, 17, 32, 1),
    FoldRange::from(0x3A3, 9, 32, 1),
    FoldRange::from(0x3C2, 1, 1, 1),
    FoldRange::from(0x3CF, 1, 8, 1),
    FoldRange::from(0x3D0, 1, -30, 1),
    FoldRange::from(0x3D1, 1, -25, 1),
    FoldRange::from(0x3D5, 1, -15, 1),
    FoldRange::from(0x3D6, 1, -22, 1),
    FoldRange::from(0x3D8, 23, 1, 2),
    FoldRange::from(0x3F0, 1, -54, 1),
    FoldRange::from(0x3F1, 1, -48, 1),
    FoldRange::from(0x3F4, 1, -60, 1),
    FoldRange::from(0x3F5, 1, -64, 1),
    FoldRange::from(0x3F7, 1, 1, 1),
    FoldRange::from(0x3F9, 1, -7, 1),
    FoldRange::from(0x3FA, 1, 1, 1),
    FoldRange::from(0x3FD, 3, -130, 1),
    FoldRange::from(0x400, 16, 80, 1),
    FoldRange::from(0x410, 32, 32, 1),
    FoldRange::from(0x460, 33, 1, 2),
    FoldRange::from(0x48A, 53, 1, 2),
    FoldRange::from(0x4C0, 1, 15, 1),
    FoldRange::from(0x4C1, 13, 1, 2),
    FoldRange::from(0x4D0, 95, 1, 2),
    FoldRange::from(0x531, 38, 48, 1),
    FoldRange::from(0x10A0, 38, 7264, 1),
    FoldRange::from(0x10C7, 1, 7264, 1),
    FoldRange::from(0x10CD, 1, 7264, 1),
    FoldRange::from(0x13F8, 6, -8, 1),
    FoldRange::from(0x1C80, 1, -6222, 1),
    FoldRange::from(0x1C81, 1, -6221, 1),
    FoldRange::from(0x1C82, 1, -6212, 1),
    FoldRange::from(0x1C83, 2, -6210, 1),
    FoldRange::from(0x1C85, 1, -6211, 1),
    FoldRange::from(0x1C86, 1, -6204, 1),
    FoldRange::from(0x1C87, 1, -6180, 1),
    FoldRange::from(0x1C88, 1, 35267, 1),
    FoldRange::from(0x1C90, 43, -3008, 1),
    FoldRange::from(0x1CBD, 3, -3008, 1),
    FoldRange::from(0x1E00, 149, 1, 2),
    FoldRange::from(0x1E9B, 1, -58, 1),
    FoldRange::from(0x1E9E, 1, -7615, 1),
    FoldRange::from(0x1EA0, 95, 1, 2),
    FoldRange::from(0x1F08, 8, -8, 1),
    FoldRange::from(0x1F18, 6, -8, 1),
    FoldRange::from(0x1F28, 8, -8, 1),
    FoldRange::from(0x1F38, 8, -8, 1),
    FoldRange::from(0x1F48, 6, -8, 1),
    FoldRange::from(0x1F59, 7, -8, 2),
    FoldRange::from(0x1F68, 8, -8, 1),
    FoldRange::from(0x1F88, 8, -8, 1),
    FoldRange::from(0x1F98, 8, -8, 1),
    FoldRange::from(0x1FA8, 8, -8, 1),
    FoldRange::from(0x1FB8, 2, -8, 1),
    FoldRange::from(0x1FBA, 2, -74, 1),
    FoldRange::from(0x1FBC, 1, -9, 1),
    FoldRange::from(0x1FBE, 1, -7173, 1),
    FoldRange::from(0x1FC8, 4, -86, 1),
    FoldRange::from(0x1FCC, 1, -9, 1),
    FoldRange::from(0x1FD8, 2, -8, 1),
    FoldRange::from(0x1FDA, 2, -100, 1),
    FoldRange::from(0x1FE8, 2, -8, 1),
    FoldRange::from(0x1FEA, 2, -112, 1),
    FoldRange::from(0x1FEC, 1, -7, 1),
    FoldRange::from(0x1FF8, 2, -128, 1),
    FoldRange::from(0x1FFA, 2, -126, 1),
    FoldRange::from(0x1FFC, 1, -9, 1),
    FoldRange::from(0x2126, 1, -7517, 1),
    FoldRange::from(0x212A, 1, -8383, 1),
    FoldRange::from(0x212B, 1, -8262, 1),
    FoldRange::from(0x2132, 1, 28, 1),
    FoldRange::from(0x2160, 16, 16, 1),
    FoldRange::from(0x2183, 1, 1, 1),
    FoldRange::from(0x24B6, 26, 26, 1),
    FoldRange::from(0x2C00, 48, 48, 1),
    FoldRange::from(0x2C60, 1, 1, 1),
    FoldRange::from(0x2C62, 1, -10743, 1),
    FoldRange::from(0x2C63, 1, -3814, 1),
    FoldRange::from(0x2C64, 1, -10727, 1),
    FoldRange::from(0x2C67, 5, 1, 2),
    FoldRange::from(0x2C6D, 1, -10780, 1),
    FoldRange::from(0x2C6E, 1, -10749, 1),
    FoldRange::from(0x2C6F, 1, -10783, 1),
    FoldRange::from(0x2C70, 1, -10782, 1),
    FoldRange::from(0x2C72, 1, 1, 1),
    FoldRange::from(0x2C75, 1, 1, 1),
    FoldRange::from(0x2C7E, 2, -10815, 1),
    FoldRange::from(0x2C80, 99, 1, 2),
    FoldRange::from(0x2CEB, 3, 1, 2),
    FoldRange::from(0x2CF2, 1, 1, 1),
    FoldRange::from(0xA640, 45, 1, 2),
    FoldRange::from(0xA680, 27, 1, 2),
    FoldRange::from(0xA722, 13, 1, 2),
    FoldRange::from(0xA732, 61, 1, 2),
    FoldRange::from(0xA779, 3, 1, 2),
    FoldRange::from(0xA77D, 1, -35332, 1),
    FoldRange::from(0xA77E, 9, 1, 2),
    FoldRange::from(0xA78B, 1, 1, 1),
    FoldRange::from(0xA78D, 1, -42280, 1),
    FoldRange::from(0xA790, 3, 1, 2),
    FoldRange::from(0xA796, 19, 1, 2),
    FoldRange::from(0xA7AA, 1, -42308, 1),
    FoldRange::from(0xA7AB, 1, -42319, 1),
    FoldRange::from(0xA7AC, 1, -42315, 1),
    FoldRange::from(0xA7AD, 1, -42305, 1),
    FoldRange::from(0xA7AE, 1, -42308, 1),
    FoldRange::from(0xA7B0, 1, -42258, 1),
    FoldRange::from(0xA7B1, 1, -42282, 1),
    FoldRange::from(0xA7B2, 1, -42261, 1),
    FoldRange::from(0xA7B3, 1, 928, 1),
    FoldRange::from(0xA7B4, 15, 1, 2),
    FoldRange::from(0xA7C4, 1, -48, 1),
    FoldRange::from(0xA7C5, 1, -42307, 1),
    FoldRange::from(0xA7C6, 1, -35384, 1),
    FoldRange::from(0xA7C7, 3, 1, 2),
    FoldRange::from(0xA7D0, 1, 1, 1),
    FoldRange::from(0xA7D6, 3, 1, 2),
    FoldRange::from(0xA7F5, 1, 1, 1),
    FoldRange::from(0xAB70, 80, -38864, 1),
    FoldRange::from(0xFF21, 26, 32, 1),
    FoldRange::from(0x10400, 40, 40, 1),
    FoldRange::from(0x104B0, 36, 40, 1),
    FoldRange::from(0x10570, 11, 39, 1),
    FoldRange::from(0x1057C, 15, 39, 1),
    FoldRange::from(0x1058C, 7, 39, 1),
    FoldRange::from(0x10594, 2, 39, 1),
    FoldRange::from(0x10C80, 51, 64, 1),
    FoldRange::from(0x118A0, 32, 32, 1),
    FoldRange::from(0x16E40, 32, 32, 1),
    FoldRange::from(0x1E900, 34, 34, 1),
];
